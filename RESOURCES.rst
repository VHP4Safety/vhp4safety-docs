Resources used to create a write this Docs.
==============================================

 - Read the Docs
 - Pandoc
 - https://stackoverflow.com/questions/30952995/convert-markdown-to-restructuredtest
 - 


 How would I display content from a .json file into a .rst (restructuredtext) file, to display the json content in the build html derived from the .rst file? 

One way to display content from a .json file in a .rst file is to use a Python script to convert the JSON data into RST format and then include the resulting RST file in your Sphinx project. Here's an example of how this could be done:

    Create a Python script that reads the JSON file and converts the data into RST format. You can use the json module to parse the JSON data, and then use string concatenation or template strings to create the RST format.

import json

with open("data.json") as json_file:
    data = json.load(json_file)

rst_output = ""
for key, value in data.items():
    rst_output += f"{key}: {value}\n"

with open("data.rst", "w") as rst_file:
    rst_file.write(rst_output)

    In the .rst file where you want the JSON data to be displayed, use the .. include:: directive to include the .rst file generated by the Python script.

.. include:: data.rst

    Build your Sphinx project as usual, using the sphinx-build command. The JSON data should now be included in the final HTML output.

Alternatively, you could use a Sphinx extension like sphinx-jsonschema which would allow you to include json files directly in the RST file, with the help of a custom directive.

Keep in mind that the details of this process may depend on the specific format and structure of your JSON data, and the requirements of your Sphinx project.

https://gist.github.com/jwebcat/5122366

## autogenerate index file to include subfolders:

import os

folder = 'folder'

subfolders = [d for d in os.listdir(folder) if os.path.isdir(os.path.join(folder, d))]

toctree = '\n'.join(f'   {folder}/{d}/index' for d in subfolders)

print(f'.. toctree::\n   :maxdepth: 2\n\n{toctree}')
